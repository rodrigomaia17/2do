@using System.Collections
@using System.Reflection


@using BootstrapSupport
@using _2do.Controllers
@using _2do.Models
@using _2do.ViewModels


@helper CriaEditor(PropertyInfo property)
{
   


    using (Html.ControlGroupFor(property.Name))
    {
 @Html.Label(property.Name.ToSeparatedWords(), new { @class = "control-label" })

        <div class="controls">
           
               
            

            @if (property.Name == "Responsavel")
            {
                @Html.DropDownListFor(x => property, (SelectList)ViewBag.colaboradores)
            }
            else
            {
                @Html.Editor(property.Name, new { @class = "input-xlarge" })
            }
            @Html.ValidationMessage(property.Name, null, new { @class = "help-inline" })
           
        </div>
    }
}

@model Object
@using (Html.BeginForm())
{
 @Html.ValidationSummary(true)

    
    
    <fieldset class="form-horizontal">
        <legend>@Model.GetLabel() <small>Details</small></legend>
        @foreach (var property in Model.VisibleProperties())
        {
            
                var listaIgnorar = new string[] {"CreatedAt", "UpdatedAt"};
                 if (listaIgnorar.Contains(property.Name))
                 {
                     continue;
                 }
                 @CriaEditor(property)
            
        }
        <div class="form-actions">
            <button type="submit" class="btn btn-primary">Save changes</button>
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn " })
        </div>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
